# Generated by Django 5.1.7 on 2025-03-19 04:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('personid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=100, unique=True)),
                ('ssn', models.CharField(max_length=20, unique=True)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.TextField()),
                ('address', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'person',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('deviceid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=50)),
                ('value', models.CharField(blank=True, max_length=20, null=True)),
                ('brand', models.CharField(blank=True, max_length=50, null=True)),
                ('configuration', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'device',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('roomid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'room',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('sensorid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('type', models.CharField(max_length=50)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('value', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'sensor',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('sessionid', models.AutoField(primary_key=True, serialize=False)),
                ('event_time', models.DateTimeField(blank=True, null=True)),
                ('value', models.CharField(blank=True, max_length=20, null=True)),
                ('action', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'session',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('adminid', models.OneToOneField(db_column='adminid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.person')),
                ('user_management', models.BooleanField(blank=True, null=True)),
                ('permission_control', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'admin',
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.OneToOneField(db_column='userid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.person')),
                ('sensor_access', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('scheduleid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('activation_time', models.DateTimeField()),
                ('deactivation_time', models.DateTimeField()),
                ('personid', models.ForeignKey(blank=True, db_column='personid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.person')),
            ],
            options={
                'db_table': 'schedule',
            },
        ),
        migrations.CreateModel(
            name='DeviceRoom',
            fields=[
                ('deviceid', models.OneToOneField(db_column='deviceid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.device')),
                ('roomid', models.ForeignKey(db_column='roomid', on_delete=django.db.models.deletion.DO_NOTHING, to='api.room')),
            ],
            options={
                'db_table': 'device_room',
                'unique_together': {('deviceid', 'roomid')},
            },
        ),
        migrations.CreateModel(
            name='SensorDevice',
            fields=[
                ('sensorid', models.OneToOneField(db_column='sensorid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.sensor')),
                ('deviceid', models.ForeignKey(db_column='deviceid', on_delete=django.db.models.deletion.DO_NOTHING, to='api.device')),
            ],
            options={
                'db_table': 'sensor_device',
                'unique_together': {('sensorid', 'deviceid')},
            },
        ),
        migrations.CreateModel(
            name='SensorSession',
            fields=[
                ('sensorid', models.OneToOneField(db_column='sensorid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.sensor')),
                ('sessionid', models.ForeignKey(db_column='sessionid', on_delete=django.db.models.deletion.DO_NOTHING, to='api.session')),
            ],
            options={
                'db_table': 'sensor_session',
                'unique_together': {('sensorid', 'sessionid')},
            },
        ),
    ]
